<?xml version="1.0" encoding="UTF-8"?> 
<queryMap desc=""> 



	 <query3 id="query3" desc="요금 계산 쿼리" >
		 <![CDATA[ 
# query3 : 요금 계산 쿼리	 
SELECT DATE_FORMAT(START_TIME,'%p %h:%i')  START_TIME
      ,DATE_FORMAT(END_TIME,'%p %h:%i')  END_TIME
      ,WORK_HH
      ,WORK_MIN
      ,TOTAL_MIN
      ,BASE_M #분단요금
      ,MAX_PAY
      ,CEIL(TOTAL_MIN * BASE_M  * 0.01)*100 TMP_PAY
      ,WROK_PAY AS OLD_WROK_PAY
,CASE  
      WHEN WROK_PAY> MAX_PAY THEN MAX_PAY   #최대요금 보다 크면 최대요금으로 변경
      ELSE TRUNCATE(WROK_PAY * 0.01, 0 )*100 #금액 절사 (100 이하 금액은 절사)
      END WROK_PAY  
      
FROM (
    SELECT
    END_TIME,START_TIME,WORK_HH,WORK_MIN,TOTAL_MIN,BASE_M,    
    CASE WHEN TOTAL_MIN <10 THEN 0  #10분이하는 0원
         WHEN TOTAL_MIN <60 THEN BASE_M   #60 이하는 2500 (10분이상은 기본요금을 다받는다.)
    ELSE CEIL(TOTAL_MIN * BASE_M  * 0.01)*100     
    END WROK_PAY  #1시간 이상은 기본요금을 분으로 환산하여 계산.
    
    FROM (

SELECT END_TIME,START_TIME
,TIMESTAMPDIFF(MINUTE,START_TIME,END_TIME ) AS TOTAL_MIN
,TIMESTAMPDIFF(HOUR,START_TIME,END_TIME ) WORK_HH
,TIMESTAMPDIFF(MINUTE,START_TIME,END_TIME ) - ( 60 * TIMESTAMPDIFF(HOUR,START_TIME,END_TIME ) )      WORK_MIN

FROM book_sales  WHERE BOOK_SALES_ID =?

    ) AA
    , (
  SELECT TRUNCATE(CD_MEANING /60 ,3) AS BASE_M FROM book_code WHERE CD_GROUP_ID='BOOK_BASE_RATE' AND CD_ID= (SELECT CASE WHEN ? LIKE 'TEST%' THEN 'TEST' ELSE ? END  )
  )  BASE_RATE  #기본요금
    
) AAA
,(
SELECT CD_MEANING AS MAX_PAY FROM book_code WHERE CD_GROUP_ID='BOOK_MAX_RATE' AND CD_ID= (SELECT CASE WHEN ? LIKE 'TEST%' THEN 'TEST' ELSE ? END  )
) MAX_RATE #최대요금

		 ]]> 
	 </query3>
	 
	 <query4 id="query4" desc="" >
		 <![CDATA[ 
select BOOK_SALES_ID,
       CARD_ID,
       DATE_FORMAT(START_TIME,'%p %h:%i')  START_TIME,
       DATE_FORMAT(END_TIME,'%p %h:%i')  END_TIME,
       WROK_PAY,
       WORK_HH,
       WORK_MIN
from   book_sales
where  BOOK_SALES_ID =?  
		 ]]> 
	 </query4>	 
	 
<query5>
 <![CDATA[ 
/** query5 **/
select @RN:=@RN+1 AS RN , aa.* from (SELECT @RN := 0) SEQ, (

SELECT
 CASE WHEN BOOK_SALES_ID IS NULL THEN 'SUM' ELSE BOOK_SALES_ID END BOOK_SALES_ID
,CASE WHEN BOOK_SALES_ID IS NULL THEN '' ELSE CARD_ID END CARD_ID
,CASE WHEN BOOK_SALES_ID IS NULL THEN '' ELSE START_TIME END START_TIME
,CASE WHEN BOOK_SALES_ID IS NULL THEN '' ELSE END_TIME END END_TIME
,CASE WHEN BOOK_SALES_ID IS NULL THEN '' ELSE START_DAY END START_DAY
,CASE WHEN BOOK_SALES_ID IS NULL THEN '' ELSE END_DAY END END_DAY
,WORK_HH
,WORK_MIN
,WROK_PAY


FROM
(
SELECT
BOOK_SALES_ID                			     AS BOOK_SALES_ID,
MAX(CARD_ID)                            AS CARD_ID,
MAX(DATE_FORMAT(START_TIME,'%p %h:%i')) AS START_TIME,
MAX(DATE_FORMAT(END_TIME,'%p %h:%i'))   AS END_TIME,
MAX(DATE_FORMAT(START_TIME,'%y/%m/%d')) AS START_DAY,
MAX(DATE_FORMAT(END_TIME,'%y/%m/%d'))   AS END_DAY,
SUM(WORK_HH) WORK_HH,
SUM(WORK_MIN) WORK_MIN,
FORMAT(SUM(WROK_PAY),0) AS WROK_PAY
from book_sales
where LAST_UPDATE_TIMESTAMP>DATE(NOW())
and LOGINID=?
GROUP BY BOOK_SALES_ID with rollup
) A


) aa
 order by rn desc
  ]]> 
</query5>
	 	 
<query6 desc="일자별실적조회 " >
<![CDATA[

/** query6 **/
select @RN:=@RN+1 AS RN , aa.* from (SELECT @RN := 0) SEQ, (

SELECT
 CASE WHEN BOOK_SALES_ID IS NULL THEN 'SUM' ELSE BOOK_SALES_ID END BOOK_SALES_ID
,CASE WHEN BOOK_SALES_ID IS NULL THEN '' ELSE CARD_ID END CARD_ID
,CASE WHEN BOOK_SALES_ID IS NULL THEN '' ELSE START_TIME END START_TIME
,CASE WHEN BOOK_SALES_ID IS NULL THEN '' ELSE END_TIME END END_TIME
,CASE WHEN BOOK_SALES_ID IS NULL THEN '' ELSE START_DAY END START_DAY
,CASE WHEN BOOK_SALES_ID IS NULL THEN '' ELSE END_DAY END END_DAY
,WORK_HH
,WORK_MIN
,WROK_PAY


FROM
(
SELECT
BOOK_SALES_ID                			     AS BOOK_SALES_ID,
MAX(CARD_ID)                            AS CARD_ID,
MAX(DATE_FORMAT(START_TIME,'%p %h:%i')) AS START_TIME,
MAX(DATE_FORMAT(END_TIME,'%p %h:%i'))   AS END_TIME,
MAX(DATE_FORMAT(START_TIME,'%y/%m/%d')) AS START_DAY,
MAX(DATE_FORMAT(END_TIME,'%y/%m/%d'))   AS END_DAY,
SUM(WORK_HH) WORK_HH,
SUM(WORK_MIN) WORK_MIN,
FORMAT(SUM(WROK_PAY),0) AS WROK_PAY
from book_sales
WHERE TO_DAY between ? and ?
and LOGINID=?
GROUP BY BOOK_SALES_ID with rollup
) A


) aa
 order by rn desc
 
 
  ]]> 
</query6>	 	 

</queryMap>
